// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesAPI.DB;

namespace MoviesAPI.DB.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20190327052323_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviesAPI.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MoviesAPI.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageRating");

                    b.Property<string>("Genres");

                    b.Property<double>("RunningTime");

                    b.Property<string>("Title");

                    b.Property<int>("YearOfRelease");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageRating = 0.0,
                            Genres = "Drama",
                            RunningTime = 145.0,
                            Title = "MoonLight",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 2,
                            AverageRating = 3.0,
                            Genres = "Comedy,Drama,Romance",
                            RunningTime = 125.0,
                            Title = "Trainwreck",
                            YearOfRelease = 2015
                        },
                        new
                        {
                            Id = 3,
                            AverageRating = 4.0,
                            Genres = "Adventure,Drama,Sci-Fi",
                            RunningTime = 144.0,
                            Title = "The Martian",
                            YearOfRelease = 2015
                        },
                        new
                        {
                            Id = 4,
                            AverageRating = 0.0,
                            Genres = "Action, Adventure, Sci-Fi",
                            RunningTime = 124.0,
                            Title = "Jurassic World",
                            YearOfRelease = 2015
                        },
                        new
                        {
                            Id = 5,
                            AverageRating = 3.5,
                            Genres = "Action,Adventure,Fantasy",
                            RunningTime = 151.0,
                            Title = "Batman v Superman= Dawn of Justice",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 6,
                            AverageRating = 3.0,
                            Genres = "Action,Adventure,Sci-Fi",
                            RunningTime = 147.0,
                            Title = "Captain America= Civil War",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 7,
                            AverageRating = 3.5,
                            Genres = "Action,Adventure,Sci-Fi",
                            RunningTime = 144.0,
                            Title = "X-Men= Apocalypse",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 8,
                            AverageRating = 0.0,
                            Genres = "Action,Comedy",
                            RunningTime = 102.0,
                            Title = "Ride Along 2",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 9,
                            AverageRating = 0.0,
                            Genres = "Action,Comedy",
                            RunningTime = 102.0,
                            Title = "Finding Dory",
                            YearOfRelease = 2016
                        },
                        new
                        {
                            Id = 10,
                            AverageRating = 2.0,
                            Genres = "Action,Drama,Sci-Fi",
                            RunningTime = 137.0,
                            Title = "Logan",
                            YearOfRelease = 2017
                        },
                        new
                        {
                            Id = 11,
                            AverageRating = 3.5,
                            Genres = "Family,Fantasy,Musical",
                            RunningTime = 129.0,
                            Title = "Beauty and the Beast",
                            YearOfRelease = 2017
                        });
                });

            modelBuilder.Entity("MoviesAPI.Models.UserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieID");

                    b.Property<int>("Rating");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("MovieID");

                    b.ToTable("UserRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieID = 3,
                            Rating = 5,
                            UserID = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieID = 2,
                            Rating = 3,
                            UserID = 1
                        },
                        new
                        {
                            Id = 3,
                            MovieID = 5,
                            Rating = 4,
                            UserID = 1
                        },
                        new
                        {
                            Id = 4,
                            MovieID = 6,
                            Rating = 5,
                            UserID = 1
                        },
                        new
                        {
                            Id = 5,
                            MovieID = 10,
                            Rating = 3,
                            UserID = 1
                        },
                        new
                        {
                            Id = 6,
                            MovieID = 11,
                            Rating = 3,
                            UserID = 1
                        },
                        new
                        {
                            Id = 7,
                            MovieID = 11,
                            Rating = 5,
                            UserID = 2
                        },
                        new
                        {
                            Id = 8,
                            MovieID = 11,
                            Rating = 2,
                            UserID = 3
                        },
                        new
                        {
                            Id = 9,
                            MovieID = 11,
                            Rating = 3,
                            UserID = 4
                        },
                        new
                        {
                            Id = 10,
                            MovieID = 7,
                            Rating = 5,
                            UserID = 2
                        },
                        new
                        {
                            Id = 11,
                            MovieID = 7,
                            Rating = 4,
                            UserID = 3
                        },
                        new
                        {
                            Id = 12,
                            MovieID = 7,
                            Rating = 3,
                            UserID = 4
                        },
                        new
                        {
                            Id = 13,
                            MovieID = 7,
                            Rating = 1,
                            UserID = 5
                        },
                        new
                        {
                            Id = 14,
                            MovieID = 7,
                            Rating = 5,
                            UserID = 6
                        },
                        new
                        {
                            Id = 15,
                            MovieID = 6,
                            Rating = 3,
                            UserID = 2
                        },
                        new
                        {
                            Id = 16,
                            MovieID = 6,
                            Rating = 1,
                            UserID = 3
                        },
                        new
                        {
                            Id = 17,
                            MovieID = 5,
                            Rating = 3,
                            UserID = 3
                        },
                        new
                        {
                            Id = 18,
                            MovieID = 3,
                            Rating = 3,
                            UserID = 3
                        },
                        new
                        {
                            Id = 1003,
                            MovieID = 7,
                            Rating = 2,
                            UserID = 1
                        },
                        new
                        {
                            Id = 1004,
                            MovieID = 1,
                            Rating = 4,
                            UserID = 4
                        });
                });

            modelBuilder.Entity("MoviesAPI.Models.UserRating", b =>
                {
                    b.HasOne("MoviesAPI.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
